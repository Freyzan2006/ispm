

services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
  
    volumes:
      - .:/app
      - ./data:/app/data 
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      # - ELASTICSEARCH_HOST=http://elasticsearch:9200
    depends_on:
      - redis
      - postgres
      # - elasticsearch
    env_file:
      - .env
    
  postgres:
    image: "postgres:16"  # Используем официальную PostgreSQL версию
    environment:
      - POSTGRES_USER=ispm_db_user  # Установите пользователя
      - POSTGRES_PASSWORD=G0ZtP3jgKYSbxsZrwOfmYZ5k7VdaPg2F  # Установите пароль
      - POSTGRES_DB=ispm_db  # Установите имя базы данных
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Персистентные данные для PostgreSQL
    ports:
      - "5432:5432"
    networks:
      - mynetwork

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - mynetwork
  
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
  #   container_name: elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #     - ES_JAVA_OPTS=-Xms512m -Xmx512m 
  #   ports:
  #     - "9200:9200"
    
  #   volumes:
  #     - esdata:/usr/share/elasticsearch/data

volumes:
  web:
  postgres_data: 

networks:
  mynetwork:
    driver: bridge
  shared_network:
    external: true